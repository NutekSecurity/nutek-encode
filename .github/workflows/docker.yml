name: Publish Docker image

on:
    push:
        tags:
            - "*" # This triggers the workflow on any tag push

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Extract version from tag
              id: extract_version
              run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: |
                      neosb/nutek-encode:${{ env.VERSION }}
                      neosb/nutek-encode:latest

            - name: Log in to Docker Hub
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Update Docker Hub README
              env:
                  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                  DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
              run: |
                  # Define variables
                  REPO_NAME="nutek-encode"
                  README_FILE="README_DOCKER.md"

                  # Update Docker Hub README
                  curl -s -X PATCH https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/${REPO_NAME}/ \
                  -H "Content-Type: application/json" \
                  -H "Authorization: JWT $(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${DOCKER_USERNAME}", "password": "${DOCKER_PASSWORD}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)" \
                  --data '{"full_description": "'"$(jq -sR . < ${README_FILE})"'"}'
